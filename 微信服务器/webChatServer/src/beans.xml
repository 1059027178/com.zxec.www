<?xml version="1.0" encoding="utf-8"?>
<!-- 
##########################
@../aop -> 用于aop 
@../tx  -> 用于事务管理
##########################
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
<!-- 测试spring 是否配置正确 -->
	<bean id="date" class="java.util.Date"/>
	
<!--********************************以下是用于spring 与hibernate 整合的相关配置************************-->
	<!-- com.mchange.v2.c3p0.ComboPooledDataSource类在c3p0-0.9.5.1.jar包的com.mchange.v2.c3p0包中 -->  
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.0.95:1521:ORCL" />
		<property name="user" value="weixintest" />
		<property name="password" value="zxec11" />
	</bean>
	<!-- 加载hibernate配置文件：配置sessionFactory -->  
	<!-- org.springframework.orm.hibernate4.LocalSessionFactoryBean类在spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 --> 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	<!-- 配置事务管理器 -->
	<!-- org.springframework.orm.hibernate4.HibernateTransactionManager类spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 -->  
	<bean id="transactionManger" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 配置advice通知：指定哪些方法需要什么类型的事务模式 
		 REQUIRED:表示如果存在事务，则支持当前的事务，如果没有则创建一个新的事务
		 SUPPORTS:表示如果存在事务，则支持当前的事务，如果没有就算了
	-->
	<tx:advice id="advice" transaction-manager="transactionManger">
		<tx:attributes>
			<tx:method name="save*"   propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="*" 	  propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置aop切面：
		 AOP即面向切面编程，
		 aop:pointcut定义一个切面，expression属性中配置的意思是所有com.webChatServer.server.impl包下的所有方法，
		 不管返回值和参数是什么，都要切入事务。该包是属于dao层的，直接操作数据库的;
		 aop:advice将通知和切面结合起来，我们直接使用上面配置好的advice和pointcut，将其引入进来即可;
		 整体含义：凡是com.webChatServer.server.impl包下的方法都需要切入事务管理，
		 具体地，以save、update、delete开头的方法使用REQUIED方式，其他方法使用SUPPORTS方式.
	-->
	<aop:config>
	 	<!-- 配置哪些包的类要切入事务 aop:pointcut要写在aop:advisor上面，否则会报错 -->  
		<aop:pointcut id="pointcut" expression="execution(* com.webChatServer.server.impl.*.*(..))" />
		<!-- 连接以上advice 和 pointcut -->
			<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
		</aop:config>
<!-- 使用hibernate+spring环境 -->
	<!-- 配置对应的server：依赖的sessionFactory用我们之前配好的sessionFactory-->  
	<bean id="categoryService" class="com.webChatServer.server.impl.CategoryServiceImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
<!--********************************以上是用于spring 与hibernate 整合的相关配置************************-->

</beans>











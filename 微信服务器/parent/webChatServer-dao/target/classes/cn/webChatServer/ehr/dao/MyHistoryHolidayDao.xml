<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 省略了dao的实现接口时需注意以下：
	1.namespace命名必须和dao的全路径相同；
	2.sql的id必须和dao的接口方法名一致；
	3.dao中的输入参数类型必须和sql的输入参数类型一致；
	4.dao的方法返回类型必须和sql中resultType类型一致（resultMap两者必存其一）
 -->
<mapper namespace="cn.webChatServer.ehr.dao.MyHistoryHolidayDao">
	<!-- 统计对应的调休、事假、病假、公出信息 -->
	<sql id="countHoliday">
		
	</sql>
	<!-- 通过UserNo工号查询 -->
	<select id="queryHistoryByUserNo" parameterType="String" resultType = "cn.webChatServer.ehr.pojo.HistoryHoliday">
		select
			t1.wnumber  userNo,				<!-- 工号 -->
			t1.name	 name,					<!-- 姓名 -->
			t1.LV		 grade,					<!-- 职等 -->
			t1.leave_year  usedYearHoliday,	<!-- 已用年假 -->
			t1.leave_daysoff  usedAdjustReset, <!-- 已用调休 -->
			t1.kq_year years				    <!-- 年度 -->
		from
			year_attendance t1
		where 1=1
			and t1.kq_year = DateName(year,GetDate())
			and t1.wnumber = #{userNo}
	</select>
	<!-- 通过工号查询-按月显示 -->
	<select id="queryHistoryMonthByUserNo" parameterType="String" resultType = "cn.webChatServer.ehr.pojo.HistoryHoliday">
		SELECT			
			T1.A0101  AS name,
			T3.MC0000 AS grade,
			cast(round(SUM (T2.LEAVE_time9/8),2)  as numeric(10,2)) AS usedSickLeave, <!-- 病假 -->
			cast(round(SUM (T2.LEAVE_time10/8),2) as numeric(10,2)) AS thingHoliday,  <!-- 事假 -->
			cast(round(SUM (T2.leave_time11/8),2) as numeric(10,2)) AS usedAdjustReset,<!--调休 -->
			cast(round(SUM (T2.leave_time13/8),2) as numeric(10,2)) AS stay,		  <!-- 公出 -->
			cast(round(SUM (T2.over_time6/8),2)   as numeric(10,2)) AS overtime,	  <!-- 加班 -->
			T2.gz_ym AS years
		FROM
			A01 AS T1
		INNER JOIN K_Month AS T2 ON T1.A0188 = T2.A0188 <!-- 考勤数据表K_Month、员工信息A01 -->
		INNER JOIN BM_HX   AS T3 ON T1.C0107 = T3.BM0000
		WHERE 1=1
			AND T1.A0191 = 1
			AND T1.a0120 = 2
		  	AND SUBSTRING (T2.gz_ym, 1, 4) = DateName(year,GetDate())
			AND T1.A0190 = #{userNo}
		GROUP BY
			T1.A0101,
			T3.MC0000,
			T2.gz_ym
	</select>
	<!-- 按部门查询历史休假情况 -->
	<select id="queryRankingByUserNo" parameterType="String" resultType="cn.webChatServer.ehr.pojo.ProjectRanking">
		SELECT * FROM
		(
			SELECT
				T1.userNo,
				T1.name,
				<!-- 按年度统计时，去除年份字段 -->
				<if test="flag!='3'.toString() and flag!='4'.toString() ">
				T1.years,
				</if>
				dense_rank() OVER (ORDER BY T1.thingHoliday desc)    thingNo,	 <!-- 事假 -->
				dense_rank() OVER (ORDER BY T1.usedSickLeave desc)   sickLeaveNo, <!-- 病假 -->
				dense_rank() OVER (ORDER BY T1.usedAdjustReset desc) adjustResetNo,<!--调休 -->
				dense_rank() OVER (ORDER BY T1.stay desc) 		    stayNo,		 <!-- 公出 -->
				dense_rank() OVER (ORDER BY T1.overtime desc) 		overtimeNo	 <!-- 加班 -->
			FROM
				(
					SELECT
						T1.A0190 userNo,
						T1.A0101 name,
						CAST (round(SUM(T2.LEAVE_time10 / 8), 2) AS NUMERIC (10, 2)) thingHoliday,
						CAST (round(SUM(T2.LEAVE_time9  / 8), 2) AS NUMERIC (10, 2)) usedSickLeave,
						CAST (round(SUM(T2.leave_time11 / 8), 2) AS NUMERIC (10, 2)) usedAdjustReset,
						CAST (round(SUM(T2.leave_time13 / 8), 2) AS NUMERIC (10, 2)) stay,
						CAST (round(SUM(T2.over_time6   / 8), 2) AS NUMERIC (10, 2)) overtime
						<!-- 按年度统计时，去除年份字段 -->
						<if test="flag!='3'.toString() and flag!='4'.toString() ">
						,T2.gz_ym years
						</if>
					FROM
						A01 AS T1
					INNER JOIN K_Month AS T2 ON T1.A0188 = T2.A0188
					INNER JOIN BM_HX AS T3 ON T1.C0107 = T3.BM0000
					WHERE 1 = 1
					AND T1.A0191 = 1
					AND T1.a0120 = 2
					<!-- 部门内部月度排名 -->
					<choose>
						<when test="flag == '1'.toString()">
							AND T2.gz_ym = #{time}
							AND T1.Dept_Code = ( SELECT Dept_Code FROM A01 WHERE A0190 = #{userNo})
						</when>
						<!-- 公司月度排名 -->
						<when test="flag == '2'.toString()">
							AND T2.gz_ym = #{time}
						</when>
						<!-- 部门内部年度排名 -->
						<when test="flag == '3'.toString()">
							AND substring(T2.gz_ym,1,4) = #{time}
							AND T1.Dept_Code = ( SELECT Dept_Code FROM A01 WHERE A0190 = #{userNo})
						</when>
						<!-- 年度公司内排名 -->
						<!-- <when test="flag == '4'.toString()"> -->
						<otherwise>
							AND substring(T2.gz_ym,1,4) = #{time}
						</otherwise>
					</choose>
					GROUP BY
						T1.A0190,
						T1.A0101
						<!-- 按年度统计时，去除年份字段 -->
						<if test="flag!='3'.toString() and flag!='4'.toString() ">
						,T2.gz_ym
						</if>
				) T1
		) T2
	WHERE
		T2.userNo = #{userNo}
		<!-- 按年度统计时，去除年份字段 -->
	<if test="flag!='3'.toString() and flag!='4'.toString() ">
	ORDER BY
		T2.years
	</if>
	</select>
</mapper>

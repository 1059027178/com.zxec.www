<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="DeliveryLog">

  <!-- Use type aliases to avoid typing the full classname every time. -->
  <typeAlias alias="DeliveryLog" type="com.thinkway.cms.business.domains.DeliveryLog"/>

  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly.
    private Integer id = null;				//日志ID
	private String companyId = null;		//所在公司
	private String dataObj = null;			//物理表名
	private String dataObjText = null;		//物理表名描述
	private String objPrimaryKey = null;	//物理表主键ID，比如帐套表的单据编号
    private String operationContent = null;	//操作内容
    private String userName = null;			//操作人
    private Timestamp operationDate = null;	//操作时间
       
  -->
  <resultMap id="DeliveryLogResult" class="DeliveryLog">
    <result property="id" column="id"/>
    <result property="dataObj" column="dataObj"/>
    <result property="dataObjText" column="dataObjText"/>
    <result property="objPrimaryKey" column="objPrimaryKey"/>
    <result property="operationContent" column="operationContent"/>
    <result property="userName" column="userName"/>
    <result property="operationDate" column="operationDate"/>
  </resultMap>

 <select id="getDeliveryLogById" parameterClass="integer" resultClass="DeliveryLog">
 	select
      id as id,
      dataObj as dataObj,
      dataObjText as dataObjText,
      objPrimaryKey as objPrimaryKey,
      operationContent as operationContent,
      userName as userName,
      operationDate as operationDate      
    from DeliveryLog
    where id = #id#
 
 </select>
 
 
 
 
 <!-- whereClause definition-->
  	<sql id="DeliveryLogQueryClause">
        <dynamic>
        	<isNotNull prepend="AND" property="id">
				(A.id = #id#)
			</isNotNull>
			<isNotNull prepend="AND" property="dataObj">
				(A.dataObj like '%$dataObj$%')
			</isNotNull>
			<isNotNull prepend="AND" property="dataObjText">
				(A.dataObjText like concat('%',#dataObjText#,'%'))
			</isNotNull>
			<isNotNull prepend="AND" property="operationContent">
				(A.operationContent like concat('%',#operationContent#,'%'))
			</isNotNull>
			<isNotNull prepend="AND" property="fromDate">
				(A.operationDate between $fromDate$ AND $toDate$)
			</isNotNull>
			<isNotNull prepend="AND" property="objPrimaryKey">
				(A.objPrimaryKey = #objPrimaryKey#)
			</isNotNull>
			<isNotNull prepend="AND" property="userName">
				(A.userName like concat('%',#userName#,'%'))
			</isNotNull>
		</dynamic>
	</sql>
	
  	<sql id="pageSQLDeliveryLog">
	  	ORDER BY $sort$ $sdir$ LIMIT $skip$,$limit$	
	</sql>
	
  <select id="getAllDeliveryLogByKw" resultMap="DeliveryLogResult" parameterClass="Map" resultClass="List">
 	select
      A.id as id,
      A.dataObj as dataObj,
      A.dataObjText as dataObjText,
      A.objPrimaryKey as objPrimaryKey,
      A.operationContent as operationContent,
      A.userName as userName,
      A.operationDate as operationDate         
    from DeliveryLog A where A.id != ''
	<include refid="DeliveryLogQueryClause" />
	<include refid="pageSQLDeliveryLog"/>	
  </select>
 
 
 	<select id="getDeliveryLogCount"  resultClass="int" parameterClass="Map">
	SELECT COUNT(*) FROM DeliveryLog A where A.id != ''
	<include refid="DeliveryLogQueryClause" />
  	</select>	
 
 

  <!-- Insert example, using the DeliveryLog parameter class -->
  <insert id="createDeliveryLog" parameterClass="DeliveryLog">
    insert into DeliveryLog (
      dataObj,
      dataObjText,
      objPrimaryKey,
      operationContent,
      userName,
      operationDate
    )values (
      #dataObj#,#dataObjText#,#objPrimaryKey#,#operationContent#, #userName#,#operationDate#
    )
  </insert>
  
   <delete id="deleteDeliveryLogById" parameterClass="Integer">
    
    delete from DeliveryLog where Id = #Id#
    
   </delete>

<update id="updateDeliveryLog" parameterClass="DeliveryLog">
	update DeliveryLog set
      dataObj = #dataObj#,
      dataObjText = #dataObjText#,
      objPrimaryKey = #objPrimaryKey#,
      operationContent = #operationContent#,
      userName = #userName#,
      operationDate = #operationDate#
    where
      id = #id#
</update>

</sqlMap>
